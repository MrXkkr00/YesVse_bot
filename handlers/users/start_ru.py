from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.dispatcher.filters.state import StatesGroup, State

from data.config import group_id
from keyboards.default.startMenuKeys import menuStart_ru, only_menu_ru
from loader import dp, bot


class BuyurtmaState_ru(StatesGroup):
    photo = State()
    text = State()


@dp.message_handler(text="üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def fadsfdsasdg_ru(message: types.Message, state: FSMContext):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç!", reply_markup=menuStart_ru)


@dp.message_handler(text="üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state=[BuyurtmaState_ru.photo, BuyurtmaState_ru.text])
async def fadsfdsag_ru(message: types.Message, state: FSMContext):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç!", reply_markup=menuStart_ru)
    await state.finish()


@dp.message_handler(text="üá∑üá∫–†—É—Å—Å–∫–∏–π —è–∑—ã–∫")
async def uz_start_ru(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ—á—Ç–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –±–æ—Ç–µ, –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–∫–∞–∑–∞ –∏ –¥—Ä—É–≥—É—é "
                         f"–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—éüëáÔ∏è")
    with open('./data/–ü—Ä–∞–≤–∏–ª–∞ –µ—Å—Ç—å –≤—Å—ë.pdf', 'rb') as doc:
        await message.answer_document(document=doc,
                                      caption="–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –Ω–∏–º–∏.",
                                      reply_markup=menuStart_ru)


@dp.message_handler(text="üõ†–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
async def yordam_ru(message: types.Message):
    await message.answer(f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã: @estvsesupport_bot")


@dp.message_handler(text="‚Ñπ–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
async def kop_beriladigan_ru(message: types.Message):
    await message.answer(f"<b>–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä?</b>\n\n"

                         f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∫–∞—Ä—Ç–æ–π.\n\n"

                         f"–í—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º —Ç–æ–≤–∞—Ä–∞ –∏ —Å–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "
                         f"¬´–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑¬ª, –∏ –±–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç, –≤—ã "
                         f"—Å–¥–µ–ª–∞–µ—Ç–µ 50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —á–µ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∞ –æ—Å—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω "
                         f"—Å —ç—Ç–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.\n\n"

                         f"(–ö–∞–∂–¥—ã–π —á–µ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É —á–µ–∫–∞)\n\n"

                         f"<b>–ö–∞–∫ –¥–æ–ª–≥–æ —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç –Ω–∞ —Ä—É–∫–∞—Ö?</b>\n\n"
                         f"–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≤–∞—Ä–∞. –¶–µ–Ω–∞ –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–Ω—è –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n"

                         f"<b>–ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Å–ª—É–∂–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏?</b>\n\n"

                         f"–ï—Å–ª–∏ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ—Ä–æ–¥–µ –¢–∞—à–∫–µ–Ω—Ç, –µ–≥–æ –¥–æ—Å—Ç–∞–≤—è—Ç —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ì–û –∏–ª–∏ –∫—É—Ä—å–µ—Ä—ã ¬´–ï—Å—Ç—å –≤—Å–Å!¬ª. "
                         f"–í —Ä–µ–≥–∏–æ–Ω—ã —á–µ—Ä–µ–∑ –ø–æ—á—Ç–æ–≤—ã—Ö —Å–ª—É–∂–± —Ç–∞–∫–∏—Ö –∫–∞–∫ BTS –∏–ª–∏ EMU.\n\n"

                         f"–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –∫—É—Ä—å–µ—Ä—É –∏–ª–∏ "
                         f"–ø–æ—á—Ç–æ–≤–æ–π —Å–ª—É–∂–±–µ, –¥–æ—Å—Ç–∞–≤–∏–≤—à–µ–π –µ–≥–æ.")


@dp.message_handler(text="üõç–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")
async def fasdfefs_ru(message: types.Message):
    await message.answer(f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å", reply_markup=only_menu_ru)
    await BuyurtmaState_ru.photo.set()


@dp.message_handler(content_types='photo', state=BuyurtmaState_ru.photo)
async def photot_ru(message: types.Message, state: FSMContext):
    photo_id = message.photo[-1].file_id
    await state.update_data(
        {'photo_id': photo_id}
    )

    await message.answer(f"–ù–∞–ø–∏—à–∏—Ç–µ –∏–∑–≤–µ—Å—Ç–Ω—É—é –≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ.")
    await BuyurtmaState_ru.text.set()


@dp.message_handler(state=BuyurtmaState_ru.photo)
async def pghdsog_ru(message: types.Message):
    await message.answer(f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å")


@dp.message_handler(state=BuyurtmaState_ru.text)
async def adfad_ru(message: types.Message, state: FSMContext):
    text = message.text
    data = await state.get_data()
    photo = data.get('photo_id')

    await message.answer(f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", reply_markup=menuStart_ru)
    await state.finish()
    await bot.send_photo(chat_id=group_id, photo=photo, caption=f"{text}\n\n"
                                                                f"Mijoz : {message.from_user.full_name}\n"
                                                                f"User_name : @{message.from_user.username}\n"
                                                                f"user_id :{message.from_user.id}")
    # await message.reply_photo()
    # await bot.forward_message()
